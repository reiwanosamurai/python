###  第二日目第2章　分類問題

##Pythonによる決定木分析

#三日月データの描画
from matplotlib.colors import ListedColormap
def plot_decision_boundary(model, X ,y, margin = 0.3):
    _x1 = np.linspace(X[:, 0].min()-margin, X[:, 0].max()+margin, 100)
    _x2 = np.linspace(X[:, 1].min()-margin, X[:, 1].max()+margin, 100)
    x1, x2 = np.meshgrid(_x1, _x2)
    X_new = np.c_[x1.ravel(), x2.ravel()]
    y_pred = model.predict(X_new).reshape(x1.shape)
    custom_cmap = ListedColormap(['mediumblue', 'orangered'])
    plt.contourf(x1, x2, y_pred, alpha = 0.3, cmap = custom_cmap)   
def plot_dataset(X, y):
    plt.plot(X[:, 0][y == 0], X[:, 1][y == 0], "bo", ms = 15)
    plt.plot(X[:, 0][y == 1], X[:, 1][y == 1], "r^", ms = 15)
    plt.xlabel("$x_0$", fontsize = 30)
    plt.ylabel("$x_1$", fontsize = 30, rotation = 0)   
plt.figure(figsize = (12, 8))
plot_dataset(X, y)
plt.show()

#決定木とランダムフォレスト
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0)
tree_clf = DecisionTreeClassifier().fit(X_train, y_train)
from sklearn.ensemble import RandomForestClassifier
random_forest = RandomForestClassifier(n_estimators=100, random_state = 0).fit(X_train, y_train)

#決定木とランダムフォレストの結果の描画
plt.figure(figsize = (24, 8))
plt.subplot(121)
plot_decision_boundary(tree_clf, X, y)
plot_dataset(X, y)
plt.title('DecisionTreeClassifier',fontsize=20)
plt.subplot(122)
plot_decision_boundary(random_forest, X, y)
plot_dataset(X, y)
plt.title('RandomForestClassifier',fontsize=20)
plt.show()

